name: snowflake-devops-demo

on:
  push:
    branches:
      - main
    paths:
      - 'migrations/**'
  workflow_dispatch:

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install schemachange snowflake-connector-python

      - name: Configure Snowflake connection
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
          SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSPHRASE }}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          
          echo "Step 1: Decoding and exporting the private key"
          echo $SNOWFLAKE_PRIVATE_KEY | base64 --decode > private_key.pem
          
          # Export environment variables for Snowflake Python connector
          export SNOWFLAKE_PRIVATE_KEY_PATH=private_key.pem
          export SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=$SNOWFLAKE_PRIVATE_KEY_PASSPHRASE

          # Debugging: Print the SF_USERNAME value
          echo "SF_USERNAME: $SF_USERNAME"

      - name: Run schemachange with key pair authentication
        run: |
          echo "Step 2: Running schemachange"
          schemachange deploy -f $GITHUB_WORKSPACE/migrations \
                              -a "${{ secrets.SF_ACCOUNT }}" \
                              -u "${{ secrets.SF_USERNAME }}" \
                              -w $SF_WAREHOUSE \
                              -d $SF_DATABASE \
                              -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY \
                              --create-change-history-table

      - name: Clean up
        run: |
          rm private_key.pem
